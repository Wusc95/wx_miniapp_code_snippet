<!--pages/components/ring_prigress_bar/ring_prigress_bar.wxml-->
<view class="container" style="width:{{size}}px;height:{{size}}px;box-shadow: 0 0 0 {{baseColor ? progressWidth : 0}}px {{progressColor}} inset;transform:scale({{adaptationScale}})">
  <view class="container_in" style="width:{{size/2}}px;height:{{size}}px;">
    <view class="container_incon circle_left_con" style="width:{{size/2}}px;height:{{size}}px;transform:rotateZ({{dataCompute.leftDegCompute(value, baseColor ? 0 : 1)}}deg);">
      <view
        class="circle_left" 
        style="width:{{size}}px;height:{{size}}px;box-shadow: 0 0 0 {{progressWidth}}px {{baseColor ? baseColor : progressColor}} inset;"
      ></view>
    </view>
  </view>
  <view class="container_in" style="width:{{size/2}}px;height:{{size}}px;">
    <view class="container_incon circle_right_con" style="width:{{size/2}}px;height:{{size}}px;transform:rotateZ({{dataCompute.rightDegCompute(value, baseColor ? 0 : 1)}}deg);">
      <view 
        class="circle_right" 
        style="width:{{size}}px;height:{{size}}px;box-shadow: 0 0 0 {{progressWidth}}px {{baseColor ? baseColor : progressColor}} inset;"
      ></view>
    </view>
  </view>
  <view class="progress_value" wx:if="{{fontSize > 0}}">
    <text style="color:{{fontColor}};font-size:{{fontSize}}px">{{dataCompute.decimalLimit(value, maxValue, decimalDigits, symbolUnit)}}</text>
  </view>
</view>
<wxs module="dataCompute">
  module.exports={
    /*
    * @param {number} value是当前进度
    * @param {number} type是当前进度的类型 0为带基础填充的，1为不带的
    */
    leftDegCompute:function(value, type) {
      var tempDeg = 0;
      if (type === 1) {
        tempDeg = (value<0.5 ? 0 : value-0.5) * 2 * 180 -180;
        if (tempDeg >= 0) {
          tempDeg = 0;
        }
      } else {
        tempDeg = (value<0.5 ? 0 : value-0.5) * 2 * 180;
        if (tempDeg >= 180) {
          tempDeg = 180;
        }
      }
      return Math.floor(tempDeg);
    },
    /*
    * @param {number} value是当前进度
    * @param {number} type是当前进度的类型 0为带基础填充的，1为不带的
    */
    rightDegCompute:function(value, type) {
      var tempDeg = 0;
      if (type === 1) {
        tempDeg = value * 2 * 180 - 180;
        if (tempDeg >= 0) {
          tempDeg = 0;
        }
      } else {
        tempDeg = value * 2 * 180;
        if (tempDeg >= 180) {
          tempDeg = 180;
        }
      }
      return Math.floor(tempDeg);
    },
    /*
    * @param {number} value是当前进度
    * @param {number} count是要保留的小数位数
    * @param {string} symbolUnit进度值显示要加的符号
    */
    decimalLimit:function(value, maxValue, count, symbolUnit) {
      if (count) {
        return Number(value * maxValue).toFixed(count) + symbolUnit;
      } else {
        return parseInt(value * maxValue) + symbolUnit;
      }
    },
    dataCeil: function(number) {
      return Math.ceil(number);
    }
  }
</wxs>
